// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("Domain.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Telemetries");

                    b.HasDiscriminator<string>("Type").HasValue("Module");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Domain.Entities.ModuleA", b =>
                {
                    b.HasBaseType("Domain.Entities.Module");

                    b.Property<string>("Prop1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prop2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prop3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Telemetries");

                    b.HasDiscriminator().HasValue("ModuleA");
                });

            modelBuilder.Entity("Domain.Entities.ModuleB", b =>
                {
                    b.HasBaseType("Domain.Entities.Module");

                    b.Property<string>("Prop4")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prop5")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prop6")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Telemetries");

                    b.HasDiscriminator().HasValue("ModuleB");
                });

            modelBuilder.Entity("Domain.Entities.ModuleC", b =>
                {
                    b.HasBaseType("Domain.Entities.Module");

                    b.Property<string>("Prop7")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prop8")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prop9")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Telemetries");

                    b.HasDiscriminator().HasValue("ModuleC");
                });

            modelBuilder.Entity("Domain.Entities.Module", b =>
                {
                    b.HasOne("Domain.Entities.Unit", "Unit")
                        .WithMany("Modules")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Domain.Entities.Unit", b =>
                {
                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
